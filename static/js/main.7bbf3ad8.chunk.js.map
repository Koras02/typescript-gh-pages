{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["CoffeeMaker","coffeeBeans","this","shots","BEANS_GRAMM_PER_SHOT","hasmilk","maker","console","log","maker2","maker3","makeMarchine","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAQMA,E,WAKJ,WAAYC,GAAsB,yBAFlCA,YAAc,EAGZC,KAAKD,YAAcA,E,8CAOrB,SAAWE,GAET,OADAD,KAAKD,aAAeE,EAAQH,EAAYI,qBACjC,CACLD,QACAE,SAAS,M,2BARb,SAAoBJ,GAClB,OAAO,IAAID,EAAYC,O,KAVrBD,EACGI,qBAAuB,EAqBhC,IAAME,EAAQ,IAAIN,EAAY,IAC9BO,QAAQC,IAAIF,GAEZ,IAAMG,EAAS,IAAIT,EAAY,IAC/BO,QAAQC,IAAIC,GAIZ,IAAMC,EAASV,EAAYW,aAAa,GACxCJ,QAAQC,IAAIE,GAQGE,MANf,WACE,OACE,6FAAmBZ,EAAYI,qBAA/B,2BC7BWS,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7bbf3ad8.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\ntype CoffeeCup = {\n  shots: number;\n  hasmilk: boolean;\n};\n\nclass CoffeeMaker {\n  static BEANS_GRAMM_PER_SHOT = 7;\n\n  coffeeBeans = 0;\n\n  constructor(coffeeBeans: number) {\n    this.coffeeBeans = coffeeBeans;\n  }\n\n  static makeMarchine(coffeeBeans: number): CoffeeMaker {\n    return new CoffeeMaker(coffeeBeans);\n  }\n\n  makeCoffee(shots: number): CoffeeCup {\n    this.coffeeBeans -= shots * CoffeeMaker.BEANS_GRAMM_PER_SHOT;\n    return {\n      shots,\n      hasmilk: false,\n    };\n  }\n}\n\nconst maker = new CoffeeMaker(32);\nconsole.log(maker);\n\nconst maker2 = new CoffeeMaker(14);\nconsole.log(maker2);\n\n// maker2.makeCoffee();\n\nconst maker3 = CoffeeMaker.makeMarchine(3);\nconsole.log(maker3);\n\nfunction App() {\n  return (\n    <div>현재 커피 잔의 개수는 {CoffeeMaker.BEANS_GRAMM_PER_SHOT} 입니다.</div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}